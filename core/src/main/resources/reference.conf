akka {
#    event-handlers = ["akka.contrib.jul.JavaLoggingEventHandler"]
#    event-handlers = ["akka.event.EventHandler$DefaultListener"]
    loglevel = DEBUG
#   loglevel = INFO
    stdout-loglevel = DEBUG
    log-config-on-start = off

  actor {
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      fsm = on
      event-stream = on
      unhandled = on
    }

    deployment {
      "/application/*" {
        router = "round-robin"
#        nr-of-instances = 20
        resizer {
          lower-bound = 1
          upper-bound = 40
        }
      }

      /master/workerRouter {
        # Uncomment the following two lines to change the calculation to
        # use 10 workers instead of 4:
        # this is currently used by examples, Pi.
        router = round-robin
        nr-of-instances = 8
      }
    }

    default-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 4
        parallelism-factor = 10
        parallelism-max = 64
      }
      throughput = 10
    }

  }
}

low-priority-dispatcher {
  type = "Dispatcher"
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 2
    parallelism-max = 8
  }
  throughput = 1
}


spray.can.server {
  request-timeout = 1s
}

event.souring.recover.timeout.in.seconds = 10

event.store.storage {
  #type=LEVELDB
  #type=INMEM
  type=JOURNALIO

  # only applies to file-based storage
  #filePath = leveldb/journal
  filePath = journalio/journal
}
